// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/izaakdale/aws-events/publisher (interfaces: SNSPublishAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	sns "github.com/aws/aws-sdk-go-v2/service/sns"
	gomock "github.com/golang/mock/gomock"
)

// MockSNSPublishAPI is a mock of SNSPublishAPI interface.
type MockSNSPublishAPI struct {
	ctrl     *gomock.Controller
	recorder *MockSNSPublishAPIMockRecorder
}

// MockSNSPublishAPIMockRecorder is the mock recorder for MockSNSPublishAPI.
type MockSNSPublishAPIMockRecorder struct {
	mock *MockSNSPublishAPI
}

// NewMockSNSPublishAPI creates a new mock instance.
func NewMockSNSPublishAPI(ctrl *gomock.Controller) *MockSNSPublishAPI {
	mock := &MockSNSPublishAPI{ctrl: ctrl}
	mock.recorder = &MockSNSPublishAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSNSPublishAPI) EXPECT() *MockSNSPublishAPIMockRecorder {
	return m.recorder
}

// Publish mocks base method.
func (m *MockSNSPublishAPI) Publish(arg0 context.Context, arg1 *sns.PublishInput, arg2 ...func(*sns.Options)) (*sns.PublishOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Publish", varargs...)
	ret0, _ := ret[0].(*sns.PublishOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Publish indicates an expected call of Publish.
func (mr *MockSNSPublishAPIMockRecorder) Publish(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockSNSPublishAPI)(nil).Publish), varargs...)
}
